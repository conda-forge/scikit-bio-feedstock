From 9c061da7e2746aee403b41621f71b118ce5c52f8 Mon Sep 17 00:00:00 2001
From: Daniel McDonald <danielmcdonald@ucsd.edu>
Date: Mon, 19 Aug 2019 15:27:12 -0700
Subject: [PATCH] WIP: Build fixes for pandas 0.25.0 and scipy 1.3.0 (#1665)

* Build fixes for pandas 0.25.0 and scipy 1.3.0

* Build fixes for pandas 0.25.0 and scipy 1.3.0

* Build fixes for pandas 0.25.0 and scipy 1.3.0
---
 skbio/stats/distance/tests/test_mantel.py | 8 ++++----
 skbio/stats/evolve/_hommola.py            | 4 ++--
 skbio/stats/power.py                      | 4 ++--
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/skbio/stats/distance/tests/test_mantel.py b/skbio/stats/distance/tests/test_mantel.py
index cb7146d89..1a06a54a9 100644
--- a/skbio/stats/distance/tests/test_mantel.py
+++ b/skbio/stats/distance/tests/test_mantel.py
@@ -186,7 +186,7 @@ def test_one_sided_less(self):
         for method in self.methods:
             obs = mantel(self.minx, self.minx, method=method,
                          alternative='less')
-            self.assertEqual(obs, (1, 1, 3))
+            npt.assert_almost_equal(obs, (1, 1, 3))
 
         np.random.seed(0)
 
@@ -247,15 +247,15 @@ def test_no_variation_pearson(self):
             # distances
             obs = mantel(self.miny, self.no_variation, method='pearson',
                          alternative=alt)
-            npt.assert_equal(obs, (0.0, 1.0, 3))
+            npt.assert_equal(obs, (np.nan, np.nan, 3))
 
             obs = mantel(self.no_variation, self.miny, method='pearson',
                          alternative=alt)
-            npt.assert_equal(obs, (0.0, 1.0, 3))
+            npt.assert_equal(obs, (np.nan, np.nan, 3))
 
             obs = mantel(self.no_variation, self.no_variation,
                          method='pearson', alternative=alt)
-            npt.assert_equal(obs, (1.0, 1.0, 3))
+            npt.assert_equal(obs, (np.nan, np.nan, 3))
 
     def test_no_variation_spearman(self):
         exp = (np.nan, np.nan, 3)
diff --git a/skbio/stats/evolve/_hommola.py b/skbio/stats/evolve/_hommola.py
index 3263cca50..6824c0c2a 100644
--- a/skbio/stats/evolve/_hommola.py
+++ b/skbio/stats/evolve/_hommola.py
@@ -126,8 +126,8 @@ def hommola_cospeciation(host_dist, par_dist, interaction, permutations=999):
 
     >>> corr_coeff, p_value, perm_stats = hommola_cospeciation(
     ...     hdist, pdist, interaction, permutations=99)
-    >>> corr_coeff
-    0.83170965463247903
+    >>> round(corr_coeff, 8)
+    0.83171097
 
     In this case, the host distances have a fairly strong positive correlation
     with the symbiont distances. However, this may also reflect structure
diff --git a/skbio/stats/power.py b/skbio/stats/power.py
index 3fb3f13c4..471d49b49 100644
--- a/skbio/stats/power.py
+++ b/skbio/stats/power.py
@@ -84,8 +84,8 @@
 the first distribution.
 
 >>> samples = [ind, dep]
->>> f(samples)
-3.6459452596563003e-08
+>>> round(f(samples), 6)
+3.645945e-08
 
 In `subsample_power`, we can maintain a paired relationship between samples
 by setting `draw_mode` to "matched". We can also set our critical value, so
